#!/bin/bash

# Copy local files to /usr/local.

usage() {
    echo "Usage: $(basename $0) <username>"
}

run_vncpasswd() {
    if [ -z $1 ]; then
        echo "Error: run_vncpasswd\(\) requires a username argument."
        exit 1
    fi

    # A password is required for vnc4server to start, but since we will only
    # allow access to the vnc port from localhost, it's not really needed.
    su -c "echo \"jjjjjj\" > ~/.vnc/passwd" $1
    su -c "chmod 600 ~/.vnc/passwd" $1
}

do_stuff() {
    # cd into the directory the script resides in.
    pushd $(dirname $0)

    . ./setup-vars

    echo "installing vnc4server."
    apt-get install -y vnc4server

    echo "Creating ~/.vnc/xstartup."
    su -c "mkdir ~/.vnc" $user_
    su -c "echo \"#!/bin/bash\" > ~/.vnc/xstartup" $user_
    su -c "echo \"/usr/bin/lxsession -s Lubuntu -e LXDE\" >> ~/.vnc/xstartup" $user_
    su -c "chmod 755 ~/.vnc/xstartup" $user_

    #echo "Setting vnc password."
    #run_vncpasswd $user_

    echo "Installing systemd startup script."
    ./setup-local-files vnc

    echo "Injecting username into the startup script."
    # Using sed, edit in place and save a backup.
    sed --in-place=$(date +%FT%T) "s/linuxconfig/$user_/" /etc/systemd/system/vncserver@.service

    echo "Enabling vnc on startup."
    systemctl daemon-reload

    echo "First disable vnc... this will fail if this is the first"
    echo "time this script has been run."
    systemctl disable vncserver@1
    systemctl enable vncserver@1

    echo "Starting VNC desktop service."
    service vncserver@1 start
    systemctl status --no-pager vncserver@1

    # Make sure firewall is setup to accept vnc connections.
    ufw status | grep -qs vnc-server
    if [ $? == 1 ]; then
        echo "The firewall has not been setup to allow vnc connections."
        echo "Setup the ufw firewall using the \"setup-ufw\" script."
    fi

    echo "All done with VNC setup!"
    popd
}

### Main ###

if [ -z $1 ]; then
    usage
    exit 1
else
    user_="$1"
fi

logfile="$(basename $0)-$(date +%FT%T).log"

do_stuff 2>&1 | tee $logfile

# vim:sts=4:sw=4:tw=76
